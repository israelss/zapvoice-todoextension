var y=Object.defineProperty;var h=(e,t,a)=>t in e?y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;var d=(e,t,a)=>(h(e,typeof t!="symbol"?t+"":t,a),a);import{s,t as k,e as p,a as r,r as u,b as v}from"./utils-85948917.js";class w extends Error{constructor({message:a,statusCode:m,error:o}){super(a);d(this,"statusCode");d(this,"error");this.message=a,this.statusCode=m,this.error=o}}const T=e=>({body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});async function i(e,t){const a=await s.getToken(),m={...t,headers:{...t.headers,Authorization:`Bearer ${a}`}};try{const o=await fetch(e,m),f=await o.json();if(o.ok)return{data:f,ok:!0};throw new w(f)}catch(o){return console.log({error:o}),o instanceof w?{message:o.message,ok:!1}:o instanceof TypeError?o.message==="Failed to fetch"?{message:"Erro de rede. Tente novamente mais tarde",ok:!1}:{message:o.message,ok:!1}:{message:"Erro desconhecido",ok:!1}}}async function E(e,t){return await i(e,{method:"POST",...T(t)})}async function _(e,t){let a={method:"PATCH"};return t!==void 0&&(a={...a,...T(t)}),await i(e,a)}async function I(e){return await i(e,{method:"DELETE"})}async function A(e){return await i(e,{method:"GET"})}const S=e=>({login:async function({email:t,password:a}){return await E(`${e}/auth/login`,{email:t,password:a})},register:async function({email:t,password:a}){return await E(`${e}/auth/register`,{email:t,password:a})}}),R=e=>({create:async function({content:t}){return await E(`${e}/items`,{content:t})},getAll:async function(){return await A(`${e}/items`)},markAsComplete:async function({id:t}){return await _(`${e}/items/${t}/complete`)},remove:async function({id:t}){return await I(`${e}/items/${t}`)}}),l="http://localhost:3000",n={auth:S(l),items:R(l)},$=async e=>{const t=await n.auth.login(e);await g(t)},b=async e=>{const t=await n.auth.register(e);await g(t)};async function g(e){if(await s.clear(),e.ok){const{access_token:t,email:a}=e.data;s.setItems({[k]:t,[p]:a})}else s.setError(e.message)}const c=async()=>{await s.remove(r);const e=await n.items.getAll();P(e)},M=async e=>{await s.remove(r),(await n.items.create(e)).ok?c():s.setError("Não foi possível criar a tarefa. Tente novamente mais tarde")},C=async e=>{await s.remove(r),(await n.items.markAsComplete(e)).ok?c():s.setError("Não foi possível marcar a tarefa como completa. Tente novamente mais tarde")},N=async e=>{await s.remove(r),(await n.items.remove(e)).ok?c():s.setError("Não foi possível remover a tarefa. Tente novamente mais tarde")};async function P(e){e.ok?u.sendMessage({type:"GET_ITEMS_RESPONSE",payload:e}):s.setError("Não foi possível carregar as tarefas. Tente novamente mais tarde")}u.onInstalled.addListener(async()=>{if(await s.getToken()!==void 0){const t=await n.items.getAll();t.ok&&v(t.data.filter(a=>!a.completed).length)}});u.onMessage.addListener(async({type:e,payload:t})=>{switch(e){case"LOGIN_REQUEST":{await $(t);break}case"REGISTER_REQUEST":{await b(t);break}case"GET_ITEMS_REQUEST":{await c();break}case"CREATE_ITEM_REQUEST":{await M(t);break}case"COMPLETE_ITEM_REQUEST":{await C(t);break}case"REMOVE_ITEM_REQUEST":{await N(t);break}}});
